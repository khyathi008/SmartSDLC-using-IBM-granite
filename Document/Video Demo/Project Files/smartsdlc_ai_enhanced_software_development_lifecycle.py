# -*- coding: utf-8 -*-
"""SmartSDLC - AI-Enhanced Software Development lifecycle

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F5MCfWuXChtrLXHez8IiTV2Fs0vuSXkw
"""

!pip install accelerate gradio

from transformers import AutoTokenizer, AutoModelForCausalLM

HF_TOKEN = " ur token  "
model_id = "ibm-granite/granite-3.3-2b-instruct"

tokenizer = AutoTokenizer.from_pretrained(model_id, use_auth_token=HF_TOKEN)
model = AutoModelForCausalLM.from_pretrained(model_id, device_map="auto", use_auth_token=HF_TOKEN)

# Cell 3 â€” Define SMartSDLC Assistant
import gradio as gr

def sdlc_assistant(task, prompt):
    full_prompt = f"[Task: {task}]\nUser: {prompt}\nAssistant:"
    inputs = tokenizer(full_prompt, return_tensors="pt").to(model.device)
    outputs = model.generate(**inputs, max_new_tokens=300, do_sample=True, temperature=0.7)
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

gr.Interface(
    fn=sdlc_assistant,
    inputs=[
        gr.Dropdown(["Requirement Analysis", "Code Generation", "Testing", "Debugging", "Deployment", "Documentation"], label="Task"),
        gr.Textbox(label="Enter your prompt")
    ],
    outputs="text",
    title="ðŸ§  SMartSDLC - AI-Enhanced Software Development Lifecycle",
    description="Select a software development task and enter your query."
).launch(share=True)